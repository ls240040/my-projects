{"remainingRequest":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\src\\views\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\src\\views\\Cart.vue","mtime":1567557470773},{"path":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1565805996000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //当前登录用户购物车列表\n      pnum: 0,\n      sum: 0\n    };\n  },\n  created: function created() {\n    //当前组件创建成功回调函数\n    this.loadMore();\n  },\n  computed: {\n    total: function total() {\n      var pnum = 0;\n      var sum = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.cb == true) {\n            pnum += item.count;\n            sum += item.count * item.price;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.pnum = pnum;\n      this.sum = sum;\n      return {\n        pnum: pnum,\n        sum: sum\n      };\n    }\n  },\n  methods: {\n    selectAll: function selectAll(event) {\n      // 功能：为全选按钮绑定事件 change\n      // 当全选按钮状态为checked=true\n      // 所有商品列表 cb=true\n      // 当全选按钮状态为checked=false\n      // 所有商品列表 cb=false\n      // 1.获取当前按钮状态 true\n      var cb = event.target.checked; // 2.创建循环遍历所有商品属性cb值与全选状态一致\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          item.cb = cb;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    deleteItems: function deleteItems() {\n      var _this = this;\n\n      // 功能：删除用户选中的多个商品\n      // 1.显示确认对话框\n      this.$messagebox.confirm(\"是否删除选中商品\").then(function (res) {\n        // 2.创建变量保存选中id值\n        var id = \"\"; // 3.创建循环遍历数组中每个元素\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = _this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var item = _step3.value;\n\n            // 4.判断当前元素属性cb是否等于true\n            if (item.cb) {\n              // 5.拼接id  2,3,4\n              id += item.id + \",\";\n            }\n          } // 6.去除字符串中最后一个逗号\n\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        id = id.slice(0, -1);\n\n        if (id == \"\") {\n          // 7.判断用户是否选中商品 请选择需要删除的商品\n          _this.$toast(\"请选择需要删除的商品\");\n\n          return;\n        } // 8.创建url 创建obj发送ajax请求\n\n\n        var url = \"v1/delItems\";\n        var obj = {\n          id: id\n        };\n\n        _this.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          // 9.获取服务器返回的数据\n          // 10.判断删除多个商品是否成功\n          if (res.data.code == -1) {\n            _this.$toast(\"删除失败\");\n          } else {\n            _this.$toast(\"删除成功\");\n\n            _this.loadMore(); // 11.刷新\n\n          }\n        });\n      }).catch(function (err) {});\n    },\n    deleteItem: function deleteItem(event) {\n      var _this2 = this;\n\n      // 功能：用户点击删除按钮完成删除指定商品任务\n      // 1.为按钮绑定点击事件调用deleteItem\n      // 2.显示确认框，如果用户选确定\n      // 3.将当前商品的id传递到函数中\n      // 4.发送ajax请求完成删除任务\n      // 5.删除成功 提示“删除成功”\n      this.$messagebox.confirm(\"是否删除指定数据\").then(function (res) {\n        var id = event.target.dataset.id;\n        var url = \"v1/delItem\";\n        var obj = {\n          id: id\n        };\n\n        _this2.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          _this2.$toast(\"删除成功\");\n\n          _this2.loadMore(); //刷新 \n\n        });\n      }).catch(function (err) {});\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      //功能：获取当前用户购物车列表\n      //1.创建url请求服务器地址\n      var url = \"v1/cart\"; //2.发送ajax请求（让服务器程序完成功能）\n\n      this.axios.get(url).then(function (res) {\n        //3.获取服务器返回数据\n        //4.如果服务器返回-1 请登录\n        if (res.data.code == -1) {\n          _this3.$messagebox(\"消息\", \"请登录\").then(function (res) {\n            //回调函数(用户点击确认按钮后调用函数)\n            _this3.$router.push('/Login');\n          });\n        } else {\n          // this.list=res.data.data;\n          // 添加一个新功能：为数据添加属性cb\n          // 3.1创建循环遍历res.data.data中数据\n          var rows = res.data.data;\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var item = _step4.value;\n              // 3.2为其添加属性cb值为false\n              item.cb = false;\n            } // 3.3将新数组赋值list(顺序)\n\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          _this3.list = rows;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <!-- top -->\r\n        <div class=\"CartTop\">\r\n            <img src=\"../assets/img/arrow-ee.png\">\r\n            <span>购物车</span>\r\n            <img src=\"../assets/img/menu-2-outline.png\">\r\n        </div>\r\n        <div class=\"item-box\">\r\n            <!-- 2.商品信息 -->\r\n            <div class=\"cart-item\" v-for=\"(item,index) of list\" :key=\"index\">\r\n                <div class=\"leftText\">\r\n                    <input type=\"checkbox\" v-model=\"item.cb\">\r\n                    <img :src=\"`http://127.0.0.1:5050/${item.img}`\">\r\n                    <div>\r\n                        <div class=\"lname\">{{item.lname}}</div>\r\n                        <div class=\"price\"><i>¥</i>{{item.price.toFixed(2)}}</div>\r\n                    </div>\r\n                    <div>\r\n                    <span>-</span>\r\n                    <span>{{item.count}}</span>\r\n                    <span>+</span>\r\n                </div>\r\n                </div>\r\n                <img src=\"../assets/img/delete.png\" @click=\"deleteItem\" :data-id=\"item.id\">\r\n            </div>\r\n        </div>\r\n        <!-- 3.购物车中商品数量：删除选中商品，清空购物车 -->\r\n        <div>\r\n            <!-- 购物车中商品数量：删除选中商品，清空购物车 -->\r\n            <mt-button @click=\"deleteItems\" :data-id=\"list.id\">\r\n                删除选中商品\r\n                <span style=\"color:red\">{{total.pnum}}</span>\r\n            </mt-button>\r\n            <mt-button>清空购物车</mt-button>\r\n        </div>\r\n        <!-- 结算 -->\r\n        <mt-tabbar fixed class=\"cartBottom\">\r\n            <mt-tab-item>\r\n                <div class=\"selectall\">\r\n                    <input type=\"checkbox\" @change=\"selectAll\">全选\r\n                </div>\r\n            </mt-tab-item>\r\n            <mt-tab-item>\r\n                <div class=\"sum\">\r\n                    <span>合计:</span>    \r\n                    <span>¥{{total.sum}}</span>\r\n                </div>\r\n            </mt-tab-item>\r\n            <mt-tab-item>\r\n                <div class=\"account\">去结算</div>\r\n            </mt-tab-item>\r\n        </mt-tabbar>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            list:[],  //当前登录用户购物车列表\r\n            pnum:0,\r\n            sum:0\r\n        }\r\n    },\r\n    created(){\r\n        //当前组件创建成功回调函数\r\n        this.loadMore();\r\n    },\r\n    computed:{\r\n        total(){\r\n            var pnum=0;\r\n            var sum=0;\r\n            for(var item of this.list){\r\n                if(item.cb==true){\r\n                    pnum+=item.count;\r\n                    sum+=item.count*item.price;\r\n                }\r\n            }\r\n            this.pnum=pnum;\r\n            this.sum=sum;\r\n            return {pnum:pnum,sum:sum}\r\n        }\r\n    },\r\n    methods:{\r\n        selectAll(event){\r\n            // 功能：为全选按钮绑定事件 change\r\n            // 当全选按钮状态为checked=true\r\n            // 所有商品列表 cb=true\r\n            // 当全选按钮状态为checked=false\r\n            // 所有商品列表 cb=false\r\n            // 1.获取当前按钮状态 true\r\n            var cb=event.target.checked;\r\n            // 2.创建循环遍历所有商品属性cb值与全选状态一致\r\n            for(var item of this.list){\r\n                item.cb = cb;\r\n            }\r\n        },\r\n        deleteItems(){\r\n            // 功能：删除用户选中的多个商品\r\n            // 1.显示确认对话框\r\n            this.$messagebox.confirm(\"是否删除选中商品\").then(res=>{\r\n                // 2.创建变量保存选中id值\r\n                var id = \"\";\r\n                // 3.创建循环遍历数组中每个元素\r\n                for(var item of this.list){\r\n                    // 4.判断当前元素属性cb是否等于true\r\n                    if(item.cb){\r\n                        // 5.拼接id  2,3,4\r\n                        id+=item.id+\",\";\r\n                    }\r\n                }\r\n                // 6.去除字符串中最后一个逗号\r\n                id=id.slice(0,-1);\r\n                if(id==\"\"){ // 7.判断用户是否选中商品 请选择需要删除的商品\r\n                    this.$toast(\"请选择需要删除的商品\");\r\n                    return;\r\n                }\r\n                // 8.创建url 创建obj发送ajax请求\r\n                var url=\"v1/delItems\";\r\n                var obj={id:id};\r\n                this.axios.get(url,{params:obj}).then(res=>{\r\n                    // 9.获取服务器返回的数据\r\n                    // 10.判断删除多个商品是否成功\r\n                    if(res.data.code==-1){\r\n                        this.$toast(\"删除失败\")\r\n                    }else{\r\n                        this.$toast(\"删除成功\");\r\n                        this.loadMore(); // 11.刷新\r\n                    }\r\n                })\r\n            }).catch(err=>{\r\n\r\n            })\r\n        },\r\n        deleteItem(event){\r\n            // 功能：用户点击删除按钮完成删除指定商品任务\r\n            // 1.为按钮绑定点击事件调用deleteItem\r\n            // 2.显示确认框，如果用户选确定\r\n            // 3.将当前商品的id传递到函数中\r\n            // 4.发送ajax请求完成删除任务\r\n            // 5.删除成功 提示“删除成功”\r\n            this.$messagebox.confirm(\"是否删除指定数据\").then(res=>{\r\n                var id=event.target.dataset.id;\r\n                var url=\"v1/delItem\";\r\n                var obj={id:id}\r\n                this.axios.get(url,{params:obj}).then(res=>{\r\n                    this.$toast(\"删除成功\");\r\n                    this.loadMore();//刷新 \r\n                })\r\n            }).catch(err=>{\r\n\r\n            })\r\n        },\r\n        loadMore(){\r\n            //功能：获取当前用户购物车列表\r\n            //1.创建url请求服务器地址\r\n            var url=\"v1/cart\";\r\n            //2.发送ajax请求（让服务器程序完成功能）\r\n            this.axios.get(url).then(res=>{\r\n                //3.获取服务器返回数据\r\n                //4.如果服务器返回-1 请登录\r\n                if(res.data.code == -1){\r\n                    this.$messagebox(\"消息\",\"请登录\").then(res => { //回调函数(用户点击确认按钮后调用函数)\r\n                        this.$router.push('/Login')\r\n                    })\r\n                }else{\r\n                    // this.list=res.data.data;\r\n                    // 添加一个新功能：为数据添加属性cb\r\n                    // 3.1创建循环遍历res.data.data中数据\r\n                    var rows = res.data.data;\r\n                    for(var item of rows){\r\n                        // 3.2为其添加属性cb值为false\r\n                        item.cb = false;\r\n                    }\r\n                    // 3.3将新数组赋值list(顺序)\r\n                    this.list = rows;\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n    *{\r\n        font-family:\"Microsoft Yahei\",Arial;\r\n    }\r\n    .CartTop{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        background-color:#212121;\r\n        color:#eee;\r\n        align-items: center;\r\n        height: 15vw;\r\n        padding: 0 4vw;\r\n        img{\r\n            width: 6vw\r\n        }\r\n        span{\r\n            font-size: 5vw;\r\n        }\r\n    }\r\n    .item-box{\r\n        background-color: #f4f4f4;\r\n        padding: 3vw;\r\n    }\r\n    // 1.商品项目元素\r\n    .cart-item{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-top:25px;\r\n        padding: 3vw;\r\n        background-color: #fff;\r\n        img{\r\n            width: 6vw;\r\n        }\r\n    }\r\n    // 2.修改左侧文字 复选框 商品名称 价格\r\n    .leftText{\r\n        display: flex;\r\n        align-items: center;\r\n        img{\r\n            width: 16vw;\r\n            margin-left: 3vw;\r\n        }\r\n    }\r\n    // 3.商品名称\r\n    .lname{\r\n        margin-left:25px;\r\n        font-size: 4vw;\r\n    }\r\n    .price{\r\n        margin-left:25px;\r\n        color:#f81200;\r\n        margin-top:2vw;\r\n        i{\r\n            font-style: normal;\r\n            vertical-align: text-top;\r\n            font-size: 1vw;\r\n            margin-right:2px;\r\n        }\r\n    }\r\n    .cartBottom{\r\n        .account{\r\n            margin-left: 2vw;\r\n            line-height: 13vw;\r\n            background-image: -webkit-gradient(linear,left top,right top,from(#E51422),to(#FF0C53));\r\n            color:#fff;\r\n            font-size: 4vw;\r\n        }\r\n        .selectall{\r\n            color:#000;\r\n            line-height: 13vw;\r\n            font-size: 4vw;\r\n            display: flex;\r\n            align-items: center;\r\n            flex-direction: row;\r\n            margin-left: 2vw;\r\n            input{\r\n                margin-right: 2vw;\r\n                display: block;\r\n            }\r\n        }\r\n        .sum{\r\n            line-height: 13vw;\r\n            span:first-child{\r\n                color:#999;\r\n                font-size: 3.5vw;\r\n            }\r\n            span:last-child{\r\n                color:#f81200;\r\n                font-size: 5vw;\r\n            }\r\n        } \r\n    }\r\n    .mint-tab-item{\r\n        padding: 0;\r\n    }\r\n    .mint-tabbar{\r\n        background-color: #fff;\r\n    }\r\n</style>"],"sourceRoot":"src\\views"}]}