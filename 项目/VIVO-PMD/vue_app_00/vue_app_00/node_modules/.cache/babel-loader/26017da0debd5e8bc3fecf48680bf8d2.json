{"remainingRequest":"d:\\my-projects\\项目\\Vivo-PMD\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!d:\\my-projects\\项目\\Vivo-PMD\\vue_app_00\\vue_app_00\\src\\main.js","dependencies":[{"path":"d:\\my-projects\\项目\\Vivo-PMD\\vue_app_00\\vue_app_00\\src\\main.js","mtime":1566194016587},{"path":"d:\\my-projects\\项目\\Vivo-PMD\\vue_app_00\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"d:\\my-projects\\项目\\Vivo-PMD\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router'; //引入第三方组件库 mint ui\n//1:完整引入mint-ui组件库中所有组件\n\nimport MintUI from \"mint-ui\"; //2:单独引入mint-ui组件库中样式文件\n\nimport \"mint-ui/lib/style.css\"; //3:将mint-ui注册vue实例中\n\nVue.use(MintUI); //4:将字体图标引入到当前项目中\n\nimport \"./font/iconfont.css\"; //5:引入axios 第三方ajax模块\n\nimport axios from \"axios\"; //6:配置axios 基础路径\n\naxios.defaults.baseURL = \"http://127.0.0.1:5050/\"; //7:配置axios 保存session信息\n\naxios.defaults.withCredentials = true; //8:将axios 注册vue 实例中\n//由于axios不支持 use 将实例添加vue原型\n\nVue.prototype.axios = axios; //main.js\n//9:引入vuex第三方模块\n\nimport Vuex from \"vuex\"; //11：注册Vuex（先注册->再创建实例对象）\n\nVue.use(Vuex); //10：创建Vuex存储实例对象\n\nvar store = new Vuex.Store({\n  //共享数据\n  state: {\n    cartCount: 0\n  },\n  //添加修改数据的函数\n  mutations: {\n    increment: function increment(state) {\n      //购物车数量+1\n      state.cartCount++;\n    },\n    clear: function clear(state) {\n      //清空购物车\n      state.cartCount = 0;\n    }\n  },\n  //添加获取数据函数\n  getters: {\n    getCartCount: function getCartCount(state) {\n      return state.cartCount;\n    }\n  },\n  //添加异步操作数据函数\n  actions: {}\n}); //12：将实例对象添加Vue中\n\nVue.config.productionTip = false;\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  //App App.vue根组件\n  store: store\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","MintUI","use","axios","defaults","baseURL","withCredentials","prototype","Vuex","store","Store","state","cartCount","mutations","increment","clear","getters","getCartCount","actions","config","productionTip","render","h","$mount"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,SAAnB,C,CACA;;AACA,OAAO,uBAAP,C,CACA;;AACAH,IAAII,GAAJ,CAAQD,MAAR,E,CACA;;AACA,OAAO,qBAAP,C,CAEA;;AACA,OAAOE,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,MAAMC,QAAN,CAAeC,OAAf,GAAuB,wBAAvB,C,CACA;;AACAF,MAAMC,QAAN,CAAeE,eAAf,GAA+B,IAA/B,C,CACA;AACA;;AACAR,IAAIS,SAAJ,CAAcJ,KAAd,GAAsBA,KAAtB,C,CACA;AAEA;;AACA,OAAOK,IAAP,MAAiB,MAAjB,C,CACA;;AACAV,IAAII,GAAJ,CAAQM,IAAR,E,CACA;;AACA,IAAIC,QAAM,IAAID,KAAKE,KAAT,CAAe;AACvB;AACAC,SAAM;AAACC,eAAU;AAAX,GAFiB;AAGvB;AACAC,aAAU;AACRC,aADQ,qBACEH,KADF,EACQ;AAAC;AACfA,YAAMC,SAAN;AACD,KAHO;AAIRG,SAJQ,iBAIFJ,KAJE,EAII;AAAC;AACXA,YAAMC,SAAN,GAAgB,CAAhB;AACD;AANO,GAJa;AAYvB;AACAI,WAAQ;AACNC,gBADM,wBACON,KADP,EACa;AACjB,aAAOA,MAAMC,SAAb;AACD;AAHK,GAbe;AAkBvB;AACAM,WAAQ;AAnBe,CAAf,CAAV,C,CAqBA;;AACApB,IAAIqB,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEA,IAAItB,GAAJ,CAAQ;AACNE,gBADM;AAENqB,UAAQ;AAAA,WAAKC,EAAEvB,GAAF,CAAL;AAAA,GAFF;AAEe;AACrBU;AAHM,CAAR,EAIGc,MAJH,CAIU,MAJV","sourceRoot":"d:\\my-projects\\项目\\Vivo-PMD\\vue_app_00\\vue_app_00","sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\n\n//引入第三方组件库 mint ui\n//1:完整引入mint-ui组件库中所有组件\nimport MintUI from \"mint-ui\"\n//2:单独引入mint-ui组件库中样式文件\nimport \"mint-ui/lib/style.css\"\n//3:将mint-ui注册vue实例中\nVue.use(MintUI)\n//4:将字体图标引入到当前项目中\nimport \"./font/iconfont.css\"\n\n//5:引入axios 第三方ajax模块\nimport axios from \"axios\"\n//6:配置axios 基础路径\naxios.defaults.baseURL=\"http://127.0.0.1:5050/\"\n//7:配置axios 保存session信息\naxios.defaults.withCredentials=true\n//8:将axios 注册vue 实例中\n//由于axios不支持 use 将实例添加vue原型\nVue.prototype.axios = axios;\n//main.js\n\n//9:引入vuex第三方模块\nimport Vuex from \"vuex\"\n//11：注册Vuex（先注册->再创建实例对象）\nVue.use(Vuex)\n//10：创建Vuex存储实例对象\nvar store=new Vuex.Store({\n  //共享数据\n  state:{cartCount:0},\n  //添加修改数据的函数\n  mutations:{\n    increment(state){//购物车数量+1\n      state.cartCount++;\n    },\n    clear(state){//清空购物车\n      state.cartCount=0;\n    }\n  },\n  //添加获取数据函数\n  getters:{\n    getCartCount(state){\n      return state.cartCount;\n    }\n  },\n  //添加异步操作数据函数\n  actions:{}\n})\n//12：将实例对象添加Vue中\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  render: h => h(App), //App App.vue根组件\n  store\n}).$mount('#app')\n"]}]}