{"remainingRequest":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\src\\router.js","dependencies":[{"path":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\src\\router.js","mtime":1567642519601},{"path":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport Router from 'vue-router'; //对下面这些自己创建的组件进行路径的配置\n// 每新建一个组件，就在这里导入，并为其创建一个接口\n\nimport Index from './views/Index.vue';\nimport Mall from './views/Mall.vue';\nimport Details from './views/Details.vue';\nimport Login from './views/Login.vue';\nimport Register from './views/Register.vue';\nimport Protocol from './views/Protocol.vue';\nimport Cart from './views/Cart.vue';\nimport Order from './views/Order.vue';\nimport NotFound from './views/NotFound.vue';\nimport A from './views/A.vue';\nimport B from './views/B.vue';\nVue.use(Router);\nexport default new Router({\n  routes: [//组件访问路径    组件名\n  {\n    path: '/',\n    component: Index\n  }, {\n    path: '/Mall',\n    component: Mall\n  }, {\n    path: '/Login',\n    component: Login\n  }, {\n    path: '/Register',\n    component: Register\n  }, {\n    path: '/Protocol',\n    component: Protocol\n  }, {\n    path: '/Cart',\n    component: Cart\n  }, {\n    path: '/Order',\n    component: Order\n  }, //1.props:true  让url中参数自动成为props中的自定义属性 \n  //2.在要接收参数的目标组件中，添加与路由参数同名的自定义属性变量 var details={props:[\"lid\"]}\n  //3.跳转时，/details/1  没有问号，值用'/'分割\n  {\n    path: '/Details/:lid',\n    component: Details,\n    props: true\n  }, //:lid是地址栏的值，后面的传参也是地址栏的值\n  {\n    path: '/A',\n    component: A\n  }, {\n    path: '/B',\n    component: B\n  }, {\n    path: '/*',\n    component: NotFound\n  }]\n});",{"version":3,"sources":["src\\router.js"],"names":["Vue","Router","Index","Mall","Details","Login","Register","Protocol","Cart","Order","NotFound","A","B","use","routes","path","component","props"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB,C,CAEA;AACA;;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,CAAP,MAAc,eAAd;AACA,OAAOC,CAAP,MAAc,eAAd;AAEAZ,IAAIa,GAAJ,CAAQZ,MAAR;AAEA,eAAe,IAAIA,MAAJ,CAAW;AACxBa,UAAQ,CACN;AACA;AAACC,UAAK,GAAN;AAAUC,eAAUd;AAApB,GAFM,EAGN;AAACa,UAAK,OAAN;AAAcC,eAAUb;AAAxB,GAHM,EAIN;AAACY,UAAK,QAAN;AAAeC,eAAUX;AAAzB,GAJM,EAKN;AAACU,UAAK,WAAN;AAAkBC,eAAUV;AAA5B,GALM,EAMN;AAACS,UAAK,WAAN;AAAkBC,eAAUT;AAA5B,GANM,EAON;AAACQ,UAAK,OAAN;AAAcC,eAAUR;AAAxB,GAPM,EAQN;AAACO,UAAK,QAAN;AAAeC,eAAUP;AAAzB,GARM,EASN;AACA;AACA;AACA;AAACM,UAAK,eAAN;AAAsBC,eAAUZ,OAAhC;AAAwCa,WAAM;AAA9C,GAZM,EAY+C;AACrD;AAACF,UAAK,IAAN;AAAWC,eAAUL;AAArB,GAbM,EAcN;AAACI,UAAK,IAAN;AAAWC,eAAUJ;AAArB,GAdM,EAeN;AAACG,UAAK,IAAN;AAAWC,eAAUN;AAArB,GAfM;AADgB,CAAX,CAAf","sourceRoot":"D:\\my-project\\my-projects\\项目\\VIVO-PMD\\vue_app_00\\vue_app_00","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\n\n//对下面这些自己创建的组件进行路径的配置\n// 每新建一个组件，就在这里导入，并为其创建一个接口\nimport Index from './views/Index.vue'\nimport Mall from './views/Mall.vue'\nimport Details from './views/Details.vue'\nimport Login from './views/Login.vue'\nimport Register from './views/Register.vue'\nimport Protocol from './views/Protocol.vue'\nimport Cart from './views/Cart.vue'\nimport Order from './views/Order.vue'\nimport NotFound from './views/NotFound.vue'\nimport A from './views/A.vue'\nimport B from './views/B.vue'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    //组件访问路径    组件名\n    {path:'/',component:Index},\n    {path:'/Mall',component:Mall},\n    {path:'/Login',component:Login},\n    {path:'/Register',component:Register},\n    {path:'/Protocol',component:Protocol},\n    {path:'/Cart',component:Cart},\n    {path:'/Order',component:Order},\n    //1.props:true  让url中参数自动成为props中的自定义属性 \n    //2.在要接收参数的目标组件中，添加与路由参数同名的自定义属性变量 var details={props:[\"lid\"]}\n    //3.跳转时，/details/1  没有问号，值用'/'分割\n    {path:'/Details/:lid',component:Details,props:true}, //:lid是地址栏的值，后面的传参也是地址栏的值\n    {path:'/A',component:A},\n    {path:'/B',component:B},\n    {path:'/*',component:NotFound},\n  ]\n})\n"]}]}